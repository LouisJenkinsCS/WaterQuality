package weather.clientside.gui.administrator;

import java.util.Vector;
import javax.swing.RowFilter;
import weather.ApplicationControlSystem;
import weather.clientside.utilities.MyDefaultTableModel;
import weather.common.data.AccessRights;
import weather.common.data.User;
import weather.common.data.UserType;
import weather.common.dbms.DBMSUserManager;
import weather.common.gui.component.BUDialog;

/**
 * The <code>SearchLessons</code> class creates a form that allows
 * for searching the lessons.
 * @author Ty Vanderstappen (2012)
 * @author Justin Enslin (2012)
 * @version 2012
 */
public class SearchLessons extends BUDialog {
    
    private static final String ALL_USERS = "All Users";
    private static final String ALL_ACCESS_RIGHTS = "All Access Rights";
    
    //ApplicationControlSystem appControl is declared in BUDialog
    private Vector<RowFilter<MyDefaultTableModel, Object>> filters;
    private ManageCombinedBookmarkLessons parentManage;
    private ViewLessons parentOpen;
    
    private DBMSUserManager userManager;
    private int categoryType;

    /**
     * Creates a new Search Lessons window which will open a new Open Lessons
     * window when search is clicked.
     * 
     * @param appControl The application control system.
     */
    public SearchLessons(ApplicationControlSystem appControl, 
            int categoryType) {
        super(appControl);
        initComponents();
        initialize(appControl, categoryType);
        parentManage = null;
        super.postInitialize(false);
    }
    
    /**
     * Create a new Search Lessons window which will search within the given
     * parent.
     * 
     * @param appControl The application control system.
     * @param parent The <code>ManageCombinedBookmarkLessons</code> window calling this window.
     */
    public SearchLessons(ApplicationControlSystem appControl, 
            ManageCombinedBookmarkLessons parent, int categoryType){
        super(appControl);
        initComponents();
        this.parentManage = parent;
        initialize(appControl, categoryType);
        super.postInitialize(false);
    }
    
    public SearchLessons(ApplicationControlSystem appControl, 
            ViewLessons parent, int categoryType){
        super(appControl);
        initComponents();
        this.parentOpen = parent;
        initialize(appControl, categoryType);
        super.postInitialize(false);
    }
    
    /**
     * Helper method containing common initialization code.
     * 
     * @param appControl The application control system.
     */
    private void initialize(ApplicationControlSystem appControl,
            int categoryType){
        this.appControl = appControl;
        this.categoryType = categoryType;
        userManager = appControl.getDBMSSystem().getUserManager();
        filters = new Vector<RowFilter<MyDefaultTableModel, Object>>();
        errorLabel.setVisible(false);
        setTitle("Weather Viewer - Search " + appControl.getDBMSSystem().
                getLessonCategoryManager().get(categoryType).getCategoryName());
        
        /* If this is for an open window or the user is an admin, all possible
         * creators are displayed.
         * If an instructor is searching the manage window, only the current 
         * user is added.
         */
        if(appControl.getGeneralService().getUser().getUserType() == 
                UserType.administrator || parentManage == null){
            Vector<User> users;
            users = userManager.obtainAllInstructorsAndAdministrators();
            creatorComboBox.addItem(ALL_USERS);
            for(User user : users){
                creatorComboBox.addItem(user.getLoginId());
            }
        }
        else{
            creatorComboBox.addItem(appControl.getGeneralService().getUser().
                    getLoginId());
        }
        
        accessComboBox.addItem(ALL_ACCESS_RIGHTS);
        for(AccessRights ar : AccessRights.values()){
            accessComboBox.addItem(ar.toString());
        }
    }

    /**
     * Gets the list of <code>RowFilter</code> objects representing this search.
     * 
     * @return A list of RowFilter objects representing this search.
     */
    public Vector<RowFilter<MyDefaultTableModel, Object>> getFilters() {
        return filters;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        searchLessonPanel = new javax.swing.JPanel();
        creatorLabel = new javax.swing.JLabel();
        creatorComboBox = new javax.swing.JComboBox<String>();
        searchButton = new javax.swing.JButton();
        closeButton = new javax.swing.JButton();
        errorLabel = new javax.swing.JLabel();
        accessLabel = new javax.swing.JLabel();
        accessComboBox = new javax.swing.JComboBox<String>();
        titleLabel = new javax.swing.JLabel();
        titleTextField = new javax.swing.JTextField();

        setTitle("Weather Viewer - Search Lessons");
        setResizable(false);

        creatorLabel.setText("Select A Creator To Search:");

        searchButton.setText("Search");
        searchButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchButtonActionPerformed(evt);
            }
        });

        closeButton.setText("Close");
        closeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                closeButtonActionPerformed(evt);
            }
        });

        errorLabel.setForeground(new java.awt.Color(255, 0, 0));
        errorLabel.setText("There are no lessons with these conditions.");

        accessLabel.setText("Select An Access Right To Search:");

        titleLabel.setText("The Title Contains:");

        javax.swing.GroupLayout searchLessonPanelLayout = new javax.swing.GroupLayout(searchLessonPanel);
        searchLessonPanel.setLayout(searchLessonPanelLayout);
        searchLessonPanelLayout.setHorizontalGroup(
            searchLessonPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(searchLessonPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(searchLessonPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(searchLessonPanelLayout.createSequentialGroup()
                        .addGroup(searchLessonPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(searchLessonPanelLayout.createSequentialGroup()
                                .addComponent(creatorLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(7, 7, 7)
                                .addComponent(creatorComboBox, 0, 197, Short.MAX_VALUE))
                            .addGroup(searchLessonPanelLayout.createSequentialGroup()
                                .addGroup(searchLessonPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(accessLabel)
                                    .addComponent(titleLabel))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(searchLessonPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(accessComboBox, 0, 197, Short.MAX_VALUE)
                                    .addComponent(titleTextField))))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(searchLessonPanelLayout.createSequentialGroup()
                        .addComponent(searchButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(errorLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(closeButton, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))))
        );
        searchLessonPanelLayout.setVerticalGroup(
            searchLessonPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(searchLessonPanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(searchLessonPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(titleLabel)
                    .addComponent(titleTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(searchLessonPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(accessLabel)
                    .addComponent(accessComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(searchLessonPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(creatorComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(creatorLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(searchLessonPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(searchButton)
                    .addComponent(errorLabel)
                    .addComponent(closeButton))
                .addGap(42, 42, 42))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(searchLessonPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 376, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(searchLessonPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * 
     * @param evt The event causing this action.
     */
    private void searchButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchButtonActionPerformed
        filters.clear();
        
        RowFilter<MyDefaultTableModel, Object> nameFilter;
        if(!titleTextField.getText().isEmpty())
            nameFilter = RowFilter.regexFilter(titleTextField.getText(), 
                    ManageCombinedBookmarkLessons.LESSON_COLUMN);
        else
            nameFilter = RowFilter.regexFilter("(.*)", 
                    ManageCombinedBookmarkLessons.LESSON_COLUMN);
        
        filters.add(nameFilter);
        
        RowFilter<MyDefaultTableModel, Object> creatorFilter;
        if(!ALL_USERS.equals(creatorComboBox.getSelectedItem()))
            creatorFilter = RowFilter.regexFilter("(?i)" + 
                    creatorComboBox.getSelectedItem().toString(), 
                    ManageCombinedBookmarkLessons.OWNER_COLUMN);
        else
            creatorFilter = RowFilter.regexFilter("(.*)", 
                    ManageCombinedBookmarkLessons.OWNER_COLUMN);
        
        filters.add(creatorFilter);
        
        RowFilter<MyDefaultTableModel, Object> accessFilter;
        if(!ALL_ACCESS_RIGHTS.equals(accessComboBox.getSelectedItem()))
            accessFilter = RowFilter.regexFilter("(?i)" + 
                    accessComboBox.getSelectedItem().toString(), 
                    ManageCombinedBookmarkLessons.ACCESS_COLUMN);
        else
            accessFilter = RowFilter.regexFilter("(.*)", 
                    ManageCombinedBookmarkLessons.ACCESS_COLUMN);
        
        filters.add(accessFilter);
        
        if(parentManage == null && parentOpen == null){
            this.setVisible(false);
            new ViewLessons(appControl, this, categoryType);
        }
        else if(parentOpen == null){
            parentManage.setFilters(filters);
            this.setVisible(false);
        }
        else{
            parentOpen.setFilters(filters);
            this.setVisible(false);
        }
    }//GEN-LAST:event_searchButtonActionPerformed

    /**
     * Sets the window to not visible if it has a parent, otherwise it disposes
     * this window.
     * 
     * @param evt The event causing this action.
     */
    private void closeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_closeButtonActionPerformed
        if(parentManage == null && parentOpen == null)
            this.dispose();
        else
            this.setVisible(false);
    }//GEN-LAST:event_closeButtonActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> accessComboBox;
    private javax.swing.JLabel accessLabel;
    private javax.swing.JButton closeButton;
    private javax.swing.JComboBox<String> creatorComboBox;
    private javax.swing.JLabel creatorLabel;
    private javax.swing.JLabel errorLabel;
    private javax.swing.JButton searchButton;
    private javax.swing.JPanel searchLessonPanel;
    private javax.swing.JLabel titleLabel;
    private javax.swing.JTextField titleTextField;
    // End of variables declaration//GEN-END:variables
}
