package weather.clientside.gui.administrator;

import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.util.Vector;
import javax.swing.JLabel;
import javax.swing.JTable;
import javax.swing.table.TableCellRenderer;
import javax.swing.table.TableRowSorter;
import weather.ApplicationControlSystem;
import weather.clientside.utilities.MyDefaultTableModel;
import weather.common.data.User;
import weather.common.data.lesson.LessonCategory;
import weather.common.dbms.DBMSLessonCategoryManager;
import weather.common.dbms.DBMSUserManager;
import weather.common.gui.component.BUDialog;

/**
 * A window that allows the user to manage lessons and lesson categories.
 * @author Justin Enslin (2012)
 * @version 2012
 */
public class ManageLessons extends BUDialog {

    private static int TABLE_LENGTH = 1;
    public static int NAME_COLUMN = 0;
    private int categoryType;
    
    private MyDefaultTableModel lessonModel;
    private TableRowSorter<MyDefaultTableModel> lessonSorter;
    
    private DBMSUserManager userManager;
    private DBMSLessonCategoryManager categoryManager;
    private Vector<LessonCategory> lessonCategories;
    
    /**
     * Creates new form ManageLessons
     */
    public ManageLessons(ApplicationControlSystem appControl) {
        super(appControl);
        initComponents();
        initialize(appControl);
        super.postInitialize(true);
    }
    
    /**
     * Helper method containing common initialization code.
     * 
     * @param appControl The application control system.
     */
    private void initialize(final ApplicationControlSystem appControl){
        errorLabel.setVisible(false);
        
        userManager = appControl.getDBMSSystem().getUserManager();
        categoryManager = appControl.getDBMSSystem().getLessonCategoryManager();

        setTitle("Weather Viewer - Manage Lessons");
        updateTable();
        MouseAdapter doubleClick = new MouseAdapter() {
            @Override
            public void mouseClicked(MouseEvent e) {
                JTable target = (JTable) e.getSource();
                if (e.getClickCount() == 2){
                    int row = target.getSelectedRow();
                    String name = target.getValueAt(row, NAME_COLUMN).toString();
                    for(LessonCategory cat : lessonCategories)
                        if(cat.getName().equals(name))
                            categoryType = cat.getLessonCategoryNumber();
                    new ManageCombinedBookmarkLessons(appControl, categoryType);
                }
            }
        };
        lessonTable.addMouseListener(doubleClick);
        
        /*//Center the column.
        DefaultTableCellRenderer centerRenderer = new DefaultTableCellRenderer();
        centerRenderer.setHorizontalAlignment( JLabel.CENTER );
        lessonTable.getColumnModel().getColumn(NAME_COLUMN).setCellRenderer( centerRenderer );*/
        
        //Center the header.
        TableCellRenderer renderer = lessonTable.getTableHeader().getDefaultRenderer();
        JLabel label = (JLabel)renderer;
        label.setHorizontalAlignment(JLabel.CENTER);
    }
    
    /**
     * Updates the table.
     */
    private void updateTable() {
        User currentUser = appControl.getGeneralService().getUser();
        lessonCategories = categoryManager.obtainAll();
        
        //Set column model and sorter
        lessonModel = new MyDefaultTableModel(0, 0);
        lessonModel.setColumnCount(TABLE_LENGTH);
        lessonModel.setRowCount(lessonCategories.size());
        lessonTable.setModel(lessonModel);
        lessonSorter = new TableRowSorter<MyDefaultTableModel>(lessonModel);
        lessonTable.setRowSorter(lessonSorter);
        
        //Set column names
        lessonTable.getColumnModel().getColumn(NAME_COLUMN).
                setHeaderValue("Category");
        
        //Add lessonCategories
        for(int i=0; i<lessonCategories.size(); i++){
            LessonCategory lessonCategory = lessonCategories.get(i);
            lessonTable.setValueAt(lessonCategory.getName(), i, NAME_COLUMN);
        }
        
        //Grab row filters if search window exists
        
        lessonTable.revalidate();
        validate();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lessonScrollPanel = new javax.swing.JScrollPane();
        lessonTable = new javax.swing.JTable();
        closeButton = new javax.swing.JButton();
        editLabel = new javax.swing.JLabel();
        openButton = new javax.swing.JButton();
        manageCategoriesButton = new javax.swing.JButton();
        errorLabel = new javax.swing.JLabel();

        addWindowFocusListener(new java.awt.event.WindowFocusListener() {
            public void windowGainedFocus(java.awt.event.WindowEvent evt) {
                formWindowGainedFocus(evt);
            }
            public void windowLostFocus(java.awt.event.WindowEvent evt) {
            }
        });

        lessonTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        lessonScrollPanel.setViewportView(lessonTable);

        closeButton.setText("Close");
        closeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                closeButtonActionPerformed(evt);
            }
        });

        editLabel.setFont(new java.awt.Font("Tahoma", 2, 11)); // NOI18N
        editLabel.setText("Double click to open lesson category.");

        openButton.setText("Open");
        openButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                openButtonActionPerformed(evt);
            }
        });

        manageCategoriesButton.setText("Manage Lesson Categories");
        manageCategoriesButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                manageCategoriesButtonActionPerformed(evt);
            }
        });

        errorLabel.setForeground(new java.awt.Color(255, 0, 0));
        errorLabel.setText("No Category Selected");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lessonScrollPanel)
                        .addContainerGap())
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(openButton)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(manageCategoriesButton)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(editLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 188, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(closeButton))
                            .addComponent(errorLabel))
                        .addGap(0, 9, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addComponent(lessonScrollPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 196, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(errorLabel)
                .addGap(6, 6, 6)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(closeButton)
                    .addComponent(editLabel)
                    .addComponent(openButton)
                    .addComponent(manageCategoriesButton))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void closeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_closeButtonActionPerformed
        this.dispose();
    }//GEN-LAST:event_closeButtonActionPerformed

    private void openButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_openButtonActionPerformed
        if(lessonTable.getSelectedRowCount()==0){
            errorLabel.setVisible(true);
        }
        else{
            errorLabel.setVisible(false);
            int row = lessonTable.getSelectedRow();
            String name = lessonTable.getValueAt(row, NAME_COLUMN).toString();
            for(LessonCategory cat : lessonCategories)
                if(cat.getName().equals(name))
                    categoryType = cat.getLessonCategoryNumber();
            new ManageCombinedBookmarkLessons(appControl, categoryType);
        }
    }//GEN-LAST:event_openButtonActionPerformed

    private void manageCategoriesButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_manageCategoriesButtonActionPerformed
        new ManageLessonCategoryDialog(appControl);
    }//GEN-LAST:event_manageCategoriesButtonActionPerformed

    private void formWindowGainedFocus(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowGainedFocus
        updateTable();
    }//GEN-LAST:event_formWindowGainedFocus

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton closeButton;
    private javax.swing.JLabel editLabel;
    private javax.swing.JLabel errorLabel;
    private javax.swing.JScrollPane lessonScrollPanel;
    private javax.swing.JTable lessonTable;
    private javax.swing.JButton manageCategoriesButton;
    private javax.swing.JButton openButton;
    // End of variables declaration//GEN-END:variables
}
