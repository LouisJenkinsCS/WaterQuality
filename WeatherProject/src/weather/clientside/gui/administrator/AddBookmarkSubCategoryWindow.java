package weather.clientside.gui.administrator;

import javax.swing.JOptionPane;
import weather.ApplicationControlSystem;
import weather.clientside.gui.component.GUIComponentFactory;
import weather.common.data.User;
import weather.common.data.bookmark.BookmarkCategory;
import weather.common.data.bookmark.BookmarkType;
import weather.common.data.bookmark.CategoryViewRights;
import weather.common.dbms.DBMSBookmarkEventTypesManager;
import weather.common.gui.component.BUDialog;
import weather.common.gui.component.IconProperties;

/**
 * The <code>AddBookmarkTypeDialog</code> class creates a window
 * used for making bookmark sub-categories.
 * @author Alex Funk
 * @author Justin Enslin
 * @version 2012
 */
public class AddBookmarkSubCategoryWindow extends BUDialog {

    private User user;
    private String startingCategory;

    /** Creates new form AddBookmarkTypeDialog */
    public AddBookmarkSubCategoryWindow(ApplicationControlSystem appControl, String category) {
        super(appControl);
        this.appControl = appControl;
        startingCategory = category;
        setModalityType(ModalityType.APPLICATION_MODAL);
        initComponents();
        GUIComponentFactory.initBookmarkCategoryBoxWithoutDefault(categoryComboBox, 
                eventManager, appControl.getGeneralService().getUser());
        categoryComboBox.setSelectedItem(startingCategory);
        user = appControl.getAdministratorControlSystem().getGeneralService().getUser();
        this.setTitle("Weather Viewer - Add Bookmark Subcategory");
        setIconImage(IconProperties.getTitleBarIconImage());
        nameErrorLabel.setVisible(false);
        //Must be the last line of the constructor
        super.postInitialize(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            @Override
            public void windowClosing(java.awt.event.WindowEvent evt) {
                close();
            }
        });
    }
    
    /**
     * Helper method that displays the <code>leaveWithoutSaving()</code> dialog.
     */
    private void close(){
        if(!changed() || appControl.getGeneralService()
                .leaveWithoutSaving(this)) {
            dispose();
        }
    }
    
    /**
     * Helper method to determine whether or not something has been changed in 
     * the window.
     * @return True if it was changed, false otherwise.
     */
    private boolean changed(){
        return !(nameTextField.getText().isEmpty() &&
                notesArea.getText().isEmpty() &&
                startingCategory.equals(categoryComboBox.getSelectedItem()));
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        instructionlabel = new javax.swing.JLabel();
        categoryLabel = new javax.swing.JLabel();
        subCategoryNameLabel = new javax.swing.JLabel();
        notesLabel = new javax.swing.JLabel();
        categoryComboBox = new javax.swing.JComboBox<>();
        nameTextField = new javax.swing.JTextField();
        noteScrollPane = new javax.swing.JScrollPane();
        notesArea = new javax.swing.JTextArea();
        cancelButton = new javax.swing.JButton();
        addSubCategoryButton = new javax.swing.JButton();
        nameErrorLabel = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setTitle("Weather Viewer - Add New Bookmark Subcategory ");
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        instructionlabel.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        instructionlabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        instructionlabel.setText("Select a Bookmark Category to Add this Sub-Category To.");

        categoryLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        categoryLabel.setText("Category:");

        subCategoryNameLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        subCategoryNameLabel.setText("Sub-Category Name:");

        notesLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        notesLabel.setText("Notes:");

        notesArea.setColumns(20);
        notesArea.setRows(5);
        noteScrollPane.setViewportView(notesArea);

        cancelButton.setText("Close");
        cancelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelButtonActionPerformed(evt);
            }
        });

        addSubCategoryButton.setText("Add Sub-Category");
        addSubCategoryButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addSubCategoryButtonActionPerformed(evt);
            }
        });

        nameErrorLabel.setForeground(new java.awt.Color(204, 0, 0));
        nameErrorLabel.setText("Subcategory Must Have A Name");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(instructionlabel, javax.swing.GroupLayout.DEFAULT_SIZE, 450, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(addSubCategoryButton, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(nameErrorLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 216, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(cancelButton))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(20, 20, 20)
                                .addComponent(subCategoryNameLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addComponent(categoryLabel, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(notesLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(noteScrollPane, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(nameTextField)
                            .addComponent(categoryComboBox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(instructionlabel)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(categoryLabel)
                    .addComponent(categoryComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(nameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(subCategoryNameLabel))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(46, 46, 46)
                        .addComponent(notesLabel))
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(noteScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 51, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cancelButton)
                    .addComponent(addSubCategoryButton)
                    .addComponent(nameErrorLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

private void cancelButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelButtonActionPerformed
    close();
}//GEN-LAST:event_cancelButtonActionPerformed

private void addSubCategoryButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addSubCategoryButtonActionPerformed
    DBMSBookmarkEventTypesManager typeManager = appControl
            .getAdministratorControlSystem().getGeneralService()
            .getDBMSSystem().getBookmarkTypesManager();
    String catName = (String) categoryComboBox.getSelectedItem();
    BookmarkCategory cat = appControl.getDBMSSystem().getBookmarkCategoriesManager().searchByName(catName);
    CategoryViewRights rights = cat.getViewRights();
    int catNum = cat.getBookmarkCategoryNumber();
    int userNum = user.getUserNumber();
    
    //Check for name errors.
    String name = nameTextField.getText().trim();
    if (name.isEmpty()) {
        nameErrorLabel.setText("Subcategory Must Have A Name");
        nameErrorLabel.setVisible(true);
        return;
    }
    if (typeManager.searchByName(name, catName) != null) {
        nameErrorLabel.setText("Subcategory Name Already In Use");
        nameErrorLabel.setVisible(true);
        return;
    }
    nameErrorLabel.setVisible(false);
    
    //Save item
    BookmarkType type = new BookmarkType(catNum, name, userNum, rights, notesArea.getText().trim());
    
    if(typeManager.add(type)){
        JOptionPane.showMessageDialog(this, "Bookmark Subcategory Created Successfully", 
                "Bookmark Subcategory Created", JOptionPane.INFORMATION_MESSAGE);
        this.dispose();
    }
    else {
        JOptionPane.showMessageDialog(this, "Bookmark Subcategory Creation Failed", 
                "Bookmark Subcategory Not Created", JOptionPane.INFORMATION_MESSAGE);
        this.dispose();
    }
}//GEN-LAST:event_addSubCategoryButtonActionPerformed

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        close();
    }//GEN-LAST:event_formWindowClosing

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addSubCategoryButton;
    private javax.swing.JButton cancelButton;
    private javax.swing.JComboBox<String> categoryComboBox;
    private javax.swing.JLabel categoryLabel;
    private javax.swing.JLabel instructionlabel;
    private javax.swing.JLabel nameErrorLabel;
    private javax.swing.JTextField nameTextField;
    private javax.swing.JScrollPane noteScrollPane;
    private javax.swing.JTextArea notesArea;
    private javax.swing.JLabel notesLabel;
    private javax.swing.JLabel subCategoryNameLabel;
    // End of variables declaration//GEN-END:variables

}
