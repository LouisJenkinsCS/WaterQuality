package weather.clientside.gui.administrator;

import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.util.Vector;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.TableRowSorter;
import weather.ApplicationControlSystem;
import weather.clientside.utilities.MyDefaultTableModel;
import weather.common.data.User;
import weather.common.data.lesson.LessonCategory;
import weather.common.dbms.DBMSLessonCategoryManager;
import weather.common.gui.component.BUDialog;

/**
 * This window allows the user to add, edit, or delete the lesson categories
 * in a generated list.
 * 
 * This file was copied and modified from the ManageBookmarkCategoryWindow.
 * Do the TODO's when the database is done with lessons for this to work. 
 * Currently loads bookmark categories for testing.
 * 
 * @author John Lenhart (2012)
 * @author Justin Enslin (2012)
 */
public class ManageLessonCategoryDialog extends BUDialog {
    
    private DBMSLessonCategoryManager categoryManager;
    private Vector<LessonCategory> categories;
    
    private MyDefaultTableModel lessonModel;
    private TableRowSorter<MyDefaultTableModel> lessonSorter;
    
    //Number of columns and column names.
    private final int COLUMNS = 2;
    private final int NAME_COLUMN = 0;
    private final int CATEGORY_COLUMN = 1;

    /**
     * Opens a window to manage the lesson categories.
     * @param appControl The application control system.
     */
    public ManageLessonCategoryDialog(ApplicationControlSystem appControl) {
        super(appControl);
        initialize();
        super.postInitialize(false);
    }
    
    /**
     * Initializes the GUI components.
     */
    private void initialize(){
        initComponents();
        setTitle("Weather Viewer - Manage Lesson Categories");
        nothingSelectedLabel.setVisible(false);
        categoryManager = appControl.getDBMSSystem().getLessonCategoryManager();
        update();
    }
    
    /**
     * Helper function to update the table.
     */
    private void update(){
        User currentUser = appControl.getGeneralService().getUser();
        categories = categoryManager.obtainAll();
        
        //Set column model and sorter
        lessonModel = new MyDefaultTableModel(0, 0);
        lessonModel.setColumnCount(COLUMNS);
        lessonModel.setRowCount(categories.size());
        categoryTable.setModel(lessonModel);
        lessonSorter = new TableRowSorter<MyDefaultTableModel>(lessonModel);
        categoryTable.setRowSorter(lessonSorter);
        
        //Set column names
        categoryTable.getColumnModel().getColumn(NAME_COLUMN).
                setHeaderValue("Category");
        categoryTable.addMouseListener(doubleClick);
        
        //Add lessonCategories
        for(int i=0; i<categories.size(); i++){
            LessonCategory lessonCategory = categories.get(i);
            categoryTable.setValueAt(lessonCategory.getName(), i, NAME_COLUMN);
            lessonModel.setValueAt(lessonCategory, i, CATEGORY_COLUMN);
        }
        categoryTable.removeColumn(categoryTable.getColumnModel().
                getColumn(CATEGORY_COLUMN));
        
        //Grab row filters if search window exists
        
        categoryTable.revalidate();
        validate();
    }

    /**
     * MouseAdapter to open the double-clicked category in the edit window.
     */
    MouseAdapter doubleClick = new MouseAdapter() {
        @Override
        public void mouseClicked(MouseEvent e) {
            JTable target = (JTable)e.getSource();
            if(e.getClickCount() == 2) {
                if(target.getSelectedRow() != -1)
                new EditLessonCategoryDialog(appControl, 
                        (LessonCategory)lessonModel.getValueAt(
                        categoryTable.getSelectedRow(), CATEGORY_COLUMN));
            } 
        }
    };

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        closeButton = new javax.swing.JButton();
        addCategoryButton = new javax.swing.JButton();
        removeCategoryButton = new javax.swing.JButton();
        scrollPane = new javax.swing.JScrollPane();
        categoryTable = new javax.swing.JTable();
        editCategoryButton = new javax.swing.JButton();
        nothingSelectedLabel = new javax.swing.JLabel();
        displayOrderButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Weather Viewer - Manage Lesson Categories");
        addWindowFocusListener(new java.awt.event.WindowFocusListener() {
            public void windowGainedFocus(java.awt.event.WindowEvent evt) {
                formWindowGainedFocus(evt);
            }
            public void windowLostFocus(java.awt.event.WindowEvent evt) {
            }
        });

        closeButton.setText("Close");
        closeButton.setToolTipText("Close the window without saving");
        closeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                closeButtonActionPerformed(evt);
            }
        });

        addCategoryButton.setText("Add Category");
        addCategoryButton.setToolTipText("Create a new category");
        addCategoryButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addCategoryButtonActionPerformed(evt);
            }
        });

        removeCategoryButton.setText("Remove Category");
        removeCategoryButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removeCategoryButtonActionPerformed(evt);
            }
        });

        categoryTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        scrollPane.setViewportView(categoryTable);

        editCategoryButton.setText("Edit Category");
        editCategoryButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editCategoryButtonActionPerformed(evt);
            }
        });

        nothingSelectedLabel.setForeground(new java.awt.Color(204, 0, 0));
        nothingSelectedLabel.setText("No Category Selected");

        displayOrderButton.setText("Change Display Order");
        displayOrderButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                displayOrderButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(8, 8, 8)
                        .addComponent(scrollPane))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(addCategoryButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(editCategoryButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(removeCategoryButton)
                        .addGap(6, 6, 6)
                        .addComponent(displayOrderButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(nothingSelectedLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 212, Short.MAX_VALUE)
                        .addComponent(closeButton)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(scrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 260, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(closeButton)
                    .addComponent(addCategoryButton)
                    .addComponent(removeCategoryButton)
                    .addComponent(editCategoryButton)
                    .addComponent(nothingSelectedLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(displayOrderButton))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void closeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_closeButtonActionPerformed
        dispose();
    }//GEN-LAST:event_closeButtonActionPerformed

    private void addCategoryButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addCategoryButtonActionPerformed
        new AddLessonCategoryWindow(appControl).
                setModalExclusionType(ModalExclusionType.APPLICATION_EXCLUDE);
    }//GEN-LAST:event_addCategoryButtonActionPerformed

    private void removeCategoryButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_removeCategoryButtonActionPerformed
        if(categoryTable.getSelectedRow() == -1){
            nothingSelectedLabel.setVisible(true);
        }
        else{
            if(categoryManager.delete((LessonCategory)lessonModel.getValueAt(
                    categoryTable.getSelectedRow(), CATEGORY_COLUMN))) {
                JOptionPane.showMessageDialog(this, "Category Removed Successfully",
                        "Remove Lesson Category", JOptionPane.INFORMATION_MESSAGE);
            }

            nothingSelectedLabel.setVisible(false);
        }
        update();
    }//GEN-LAST:event_removeCategoryButtonActionPerformed

    private void editCategoryButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editCategoryButtonActionPerformed
        int index = categoryTable.getSelectedRow();
        if(index!=-1){
            new EditLessonCategoryDialog(appControl, 
                        (LessonCategory)lessonModel.getValueAt(
                        index, CATEGORY_COLUMN));
            nothingSelectedLabel.setVisible(false);
        }
        else{
            nothingSelectedLabel.setVisible(true);
        }
    }//GEN-LAST:event_editCategoryButtonActionPerformed

    private void formWindowGainedFocus(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowGainedFocus
        update();
    }//GEN-LAST:event_formWindowGainedFocus

    private void displayOrderButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_displayOrderButtonActionPerformed
        new LessonCategoryDisplayOrderWindow(appControl);
    }//GEN-LAST:event_displayOrderButtonActionPerformed

    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addCategoryButton;
    private javax.swing.JTable categoryTable;
    private javax.swing.JButton closeButton;
    private javax.swing.JButton displayOrderButton;
    private javax.swing.JButton editCategoryButton;
    private javax.swing.JLabel nothingSelectedLabel;
    private javax.swing.JButton removeCategoryButton;
    private javax.swing.JScrollPane scrollPane;
    // End of variables declaration//GEN-END:variables
}
