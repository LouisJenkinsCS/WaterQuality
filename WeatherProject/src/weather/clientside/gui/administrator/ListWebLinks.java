package weather.clientside.gui.administrator;

import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.util.Vector;
import javax.swing.JTable;
import weather.AdministratorControlSystem;
import weather.clientside.utilities.MyDefaultTableModel;
import weather.common.data.WebLink;
import weather.common.data.WebLinkCategories;
import weather.common.dbms.DBMSSystemManager;
import weather.common.dbms.DBMSWebLinkManager;
import weather.common.gui.component.BUDialog;

/**
 * The <code>ListWebLinks</code> class creates a form that lists
 * the available web links.
 * @author Mike Nacko
 */
public class ListWebLinks extends BUDialog {
    private DBMSWebLinkManager webLinkManager;
    private DBMSSystemManager dbms;
    
    String originalName;  //used for when the user wants to update the name of
                          // the current link.
    String originalType;
    boolean originalWebLink; //used to set the type the link was for updating

    /**
     * Constructor.
     * @param adminService Control system unique to the administrator.
     */
    public ListWebLinks(AdministratorControlSystem adminService) {
        super(adminService);
        this.dbms = adminService.getGeneralService().getDBMSSystem();
        webLinkManager = dbms.getWebLinkManager();

        initComponents();
        
        linksTable.setRowSelectionAllowed(true);
        linksTable.setAutoCreateRowSorter(true);
        linksTable.addMouseListener(doubleClick);
                
        updateTable();
        super.postInitialize(true);
    }

    /**
     * Updates table listings. 
     * This method called after each modification, so the list can be refreshed 
     * after each modification.
     */
    private void updateTable() {
        int row = -1;
        Vector<WebLinkCategories> webLinkCategories = webLinkManager.obtainAllWebLinkCategories();
        Vector<WebLink> webLinks = webLinkManager.obtainAllWebLinks();

        linksTable.setModel(new MyDefaultTableModel(webLinks.size(), 3));
        
        linksTable.getColumnModel().getColumn(0).setHeaderValue("Category Name");
        linksTable.getColumnModel().getColumn(1).setHeaderValue("Web Link Name");
        linksTable.getColumnModel().getColumn(2).setHeaderValue("Web Link URL");
        
        for(int i = 0; i < webLinks.size(); i++) {
            WebLink current = webLinks.get(i);

            // Locate the category
            for(int j = 0; j < webLinkCategories.size(); j++) {
                if(webLinkCategories.get(j).getLinkCategoryNumber() == current.getLinkCategoryNumber()) {
                    row++;

                    linksTable.setValueAt(" " + webLinkCategories.get(j).getLinkCategory(), row, 0);
                    linksTable.getColumnModel().getColumn(0).setPreferredWidth(180);
                    linksTable.setValueAt(" " + webLinks.get(i).getName(), row, 1);
                    linksTable.getColumnModel().getColumn(1).setPreferredWidth(350);
                    linksTable.setValueAt(" " + webLinks.get(i).getURL(), row, 2);
                    linksTable.getColumnModel().getColumn(2).setPreferredWidth(520);
                }
            }
        }

        linksTable.updateUI();
    }

    MouseAdapter doubleClick = new MouseAdapter() {
        @Override
        public void mouseClicked(MouseEvent e) {
            //user double clicked on a weblink to open it
            if(e.getClickCount() == 2) {
                JTable target = (JTable)e.getSource();
                String category = target.getValueAt(target.getSelectedRow(),0).toString().trim();
                String weblink = target.getValueAt(target.getSelectedRow(),1).toString().trim();
                
                new EditWebLinks(adminService,category,weblink);
                updateTable();
            }
        }
    };

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        closeButton = new javax.swing.JButton();
        doubleClickLabel = new javax.swing.JLabel();
        addWebLinkButton = new javax.swing.JButton();
        deleteWebLinkButton = new javax.swing.JButton();
        changeOrderButton = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        linksTable = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Weather Viewer - Web Links List");
        setPreferredSize(new java.awt.Dimension(1100, 525));

        closeButton.setText("Close");
        closeButton.setToolTipText("Closes the window");
        closeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                closeButtonActionPerformed(evt);
            }
        });

        doubleClickLabel.setFont(new java.awt.Font("Tahoma", 2, 10)); // NOI18N
        doubleClickLabel.setText("To edit a web link, double-click on its name.");

        addWebLinkButton.setText("Add Web Link...");
        addWebLinkButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addWebLinkButtonActionPerformed(evt);
            }
        });

        deleteWebLinkButton.setText("Delete Web Link...");
        deleteWebLinkButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteWebLinkButtonActionPerformed(evt);
            }
        });

        changeOrderButton.setText("Change Display Order...");
        changeOrderButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                changeOrderButtonActionPerformed(evt);
            }
        });

        linksTable.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        linksTable.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jScrollPane1.setViewportView(linksTable);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(addWebLinkButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(deleteWebLinkButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(changeOrderButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 641, Short.MAX_VALUE)
                        .addComponent(closeButton, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(doubleClickLabel)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 1104, Short.MAX_VALUE)
                    .addContainerGap()))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(440, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(addWebLinkButton)
                    .addComponent(deleteWebLinkButton)
                    .addComponent(changeOrderButton)
                    .addComponent(closeButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(doubleClickLabel)
                .addGap(16, 16, 16))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 416, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(71, Short.MAX_VALUE)))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void closeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_closeButtonActionPerformed
        dispose();
    }//GEN-LAST:event_closeButtonActionPerformed

    private void addWebLinkButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addWebLinkButtonActionPerformed
        AddWebLinkWindow webLinkWindow =
                new AddWebLinkWindow(adminService);
        webLinkWindow.displayForAdd();
        updateTable();
    }//GEN-LAST:event_addWebLinkButtonActionPerformed

    private void deleteWebLinkButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteWebLinkButtonActionPerformed
        new DeleteWebLinks(adminService);
        updateTable();
    }//GEN-LAST:event_deleteWebLinkButtonActionPerformed

    private void changeOrderButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_changeOrderButtonActionPerformed
        new ChangeOrderForWebLinks(adminService);
        updateTable();
    }//GEN-LAST:event_changeOrderButtonActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addWebLinkButton;
    private javax.swing.JButton changeOrderButton;
    private javax.swing.JButton closeButton;
    private javax.swing.JButton deleteWebLinkButton;
    private javax.swing.JLabel doubleClickLabel;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable linksTable;
    // End of variables declaration//GEN-END:variables

}
