package weather.clientside.gui.client;

import java.util.ArrayList;
import java.util.Vector;
import javax.swing.JPanel;
import weather.common.data.resource.Resource;
import weather.common.data.resource.ResourceRange;
import weather.common.data.weatherstation.WeatherStationVariableProperties;
import weather.common.utilities.PropertyManager;

/**
 * SearchResourceDataPanelWeatherStation is used in the SearchObservationalDataDialog window
 * to show weather station data from a specific time range.
 * @author Ty Vanderstappen
 * @author John Lenhart
 * @version 2012
 */
public class SearchResourceDataPanelWeatherStation extends javax.swing.JPanel {
    
    private PlotData plotData;
    private WeatherDataPlotPanel plotPanel;
    private ArrayList<String> shownVariables;
    private WeatherStationVariableProperties wvProps;
    private int panelWidth;
    private int panelHright;
    
    /**
     * Creates new form SearchResourceDataPanelWeatherStation
     */
    public SearchResourceDataPanelWeatherStation(int panelWidth, int panelHright) {
        initComponents();
        this.panelWidth = panelWidth;
        this.panelHright = panelHright;
        wvProps = new WeatherStationVariableProperties(); 
        shownVariables = new ArrayList<>();
    }
    
    /**
     * Creates and displays the plot in the search observation window.
     * 
     * @param station The station used to get the data displayed by the plot.
     * @param resourceRange The range of data to be shown in the plot.
     */
    public void createPlot(Resource station, ResourceRange resourceRange)
    {   
        plotData = new PlotData(station);
        plotData.setResourceRange(resourceRange); 
        addVariable(PropertyManager
                .getLocalProperty("INITIAL_PLOT_DATA_TRACE"));
        plotPanel = new JFreeChartPlotPanel(plotData);
        plotPanel.setRange(true);//Fits range.
        plotPanel.refreshPlot(true, station.getTimeZone().getTimeZone());
        this.removeAll();
        JPanel plotJPanel = (JPanel)plotPanel;
        plotJPanel.setSize(panelWidth, panelHright);
        this.add(plotJPanel);        
        this.revalidate();
        this.repaint();
    }
    
    /**
     * Adds a variable to the plot.
     * 
     * @param variableKey The key of the variable to plot. 
     */
    private void addVariable(String variableKey)
    {
        plotData.setShown(variableKey, true);
        plotData.addSelectedVariableKey(variableKey);
        shownVariables.add(variableKey);
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        titleLabel = new javax.swing.JLabel();

        setPreferredSize(new java.awt.Dimension(1733, 267));

        titleLabel.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        titleLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        titleLabel.setText("Name Goes Here");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(titleLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 1733, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(titleLabel)
                .addGap(0, 250, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel titleLabel;
    // End of variables declaration//GEN-END:variables
}
