package weather.clientside.gui.client;

import javax.swing.JOptionPane;
import weather.GeneralService;
import weather.common.gui.component.BUDialog;
import weather.common.dbms.DBMSSystemManager;
import weather.common.dbms.DBMSUserManager;

/**
 *
 * This class represents the Change Password window.
 *
 * @author Software Engineering
 * @author Joshua Gentile
 * @author Spring 2009
 *
 */
public class ChangePassword extends BUDialog {

    private GeneralService service;
    private DBMSSystemManager dbms;
    private DBMSUserManager userManager;
    private String username;
    private String guest = "guest";
    private boolean firstLogin;
    
    /**
     * Creates the ChangePassword window.
     * @param service The service needed to change the password.
     * @param username The username of this current user.
     * @param firstLogin True if this is the first login time, false if not.
     */
    public ChangePassword(GeneralService service, String username, boolean firstLogin) {
        super();
        this.service = service;
        dbms = service.getDBMSSystem();
        this.username = username;

        initComponents();

        weather.clientside.utilities.RightClickMenu.addMenuTo(
                new javax.swing.text.JTextComponent[]{oldPasswordField, newPasswordField, retypePasswordField});
        getRootPane().setDefaultButton(submitButton);
        usernameText.setText(username);
        if (firstLogin){
            this.firstLogin = firstLogin;
            closeButton.setVisible(false);
        }
        if (username.equals(guest)) {
            //TODO Change to error text
            JOptionPane.showMessageDialog(this,
                    "You cannot change the guest password.", "Change Password",
                    JOptionPane.WARNING_MESSAGE);
            submitButton.setEnabled(false);
            this.setEnabled(false);
            this.dispose();
        } else {
            super.postInitialize(true);
        }
    }
    
    /**
     * Small method that checks to see if the user has entered data but not
     * saved it. Only used when the user is about to close this window, but
     * needs to save their data first.
     * @return True if data needs to be saved, false otherwise.
     */
    private boolean askForSave() {
        return !(oldPasswordField.getPassword().length==0 &&
                newPasswordField.getPassword().length==0 &&
                retypePasswordField.getPassword().length==0);
    }

    /**
     * This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        titleLabel = new javax.swing.JLabel();
        oldLabel = new javax.swing.JLabel();
        newLabel = new javax.swing.JLabel();
        retypeLabel = new javax.swing.JLabel();
        oldPasswordField = new javax.swing.JPasswordField();
        newPasswordField = new javax.swing.JPasswordField();
        retypePasswordField = new javax.swing.JPasswordField();
        submitButton = new javax.swing.JButton();
        clearButton = new javax.swing.JButton();
        closeButton = new javax.swing.JButton();
        usernameLabel = new javax.swing.JLabel();
        usernameText = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setTitle("Weather Viewer - Change Your Password");
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        titleLabel.setText("Enter your current password and the new password, without spaces.");

        oldLabel.setText("Old Password:");

        newLabel.setText("New Password:");

        retypeLabel.setText("Confirm Password:");

        oldPasswordField.setToolTipText("Type your old password");

        newPasswordField.setToolTipText("Type your new desired password");

        retypePasswordField.setToolTipText("Retype your new desired password");

        submitButton.setText("Save");
        submitButton.setToolTipText("Submits your new password");
        submitButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                submitButtonActionPerformed(evt);
            }
        });

        clearButton.setText("Clear");
        clearButton.setToolTipText("Resets the password fields.");
        clearButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearButtonActionPerformed(evt);
            }
        });

        closeButton.setText("Close");
        closeButton.setToolTipText("Closes the window, no password changes made");
        closeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                closeButtonActionPerformed(evt);
            }
        });

        usernameLabel.setText("Username:");

        usernameText.setEditable(false);
        usernameText.setToolTipText("Your user name");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(retypeLabel)
                            .addComponent(newLabel)
                            .addComponent(oldLabel)
                            .addComponent(usernameLabel))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(retypePasswordField)
                            .addComponent(newPasswordField)
                            .addComponent(usernameText, javax.swing.GroupLayout.DEFAULT_SIZE, 171, Short.MAX_VALUE)
                            .addComponent(oldPasswordField)))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(titleLabel)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(submitButton)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(clearButton, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(closeButton, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(17, 17, 17))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(titleLabel)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(usernameText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(usernameLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(oldPasswordField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(oldLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(newPasswordField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(newLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(retypePasswordField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(retypeLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 12, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(closeButton, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(clearButton, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(submitButton))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * Closes the window when the event received is X button pressed.
     * @param evt The X button has been pressed.
     */
    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        if(firstLogin){
            JOptionPane.showMessageDialog(this, "You must change your password.",
                    "Change Password", JOptionPane.INFORMATION_MESSAGE);  
            return;
        }
        if(askForSave()) {
            if(service.leaveWithoutSaving(this)) {
                dispose();
            } 
        } else {
            dispose();
        }
    }//GEN-LAST:event_formWindowClosing

    /**
     * This method will change the password once the submit button is pressed, or
     * alert the user that their inputs are incorrect.
     * @param evt The button has been pressed.
     */
    private void submitButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_submitButtonActionPerformed
        //Make sure password is new.
        if (this.checkNewPassword()) {
            String oldPass = new String(oldPasswordField.getPassword());
            String newPass = new String(newPasswordField.getPassword());
            if(oldPass.equals(newPass)){
                JOptionPane.showMessageDialog(this, "The new password must be different "
                        + "from the old one",
                        "Change Password", JOptionPane.INFORMATION_MESSAGE);
                return;
            }
            //Update password.
            userManager = dbms.getUserManager();
            userManager.updatePassword(username, newPass);
            JOptionPane.showMessageDialog(this, "Your password has been changed successfully.",
                    "Change Password", JOptionPane.INFORMATION_MESSAGE);
            this.dispose();
        }

    }//GEN-LAST:event_submitButtonActionPerformed

    //TODO Change to error texts.
    private boolean checkNewPassword()
    {
        char[] oldPassword = oldPasswordField.getPassword();
        String passwordOld = String.valueOf(oldPassword);
        char[] newPassword = newPasswordField.getPassword();
        String passwordNew = String.valueOf(newPassword);
        char[] checknewPassword = retypePasswordField.getPassword();
        String checkPassword = String.valueOf(checknewPassword);
        if (!service.validateAndSetUser(username, passwordOld)) {
        JOptionPane.showMessageDialog(this, "Invalid Password.",
            "Change Password", JOptionPane.WARNING_MESSAGE);
            return false;
        }
       if (!passwordNew.equals(checkPassword))  {
        JOptionPane.showMessageDialog(this,"The new passwords do not match.",
                "Change Password", JOptionPane.WARNING_MESSAGE);
        return false;
       }
       if(passwordNew.contains(" ") || passwordNew.equals(""))
      {
        JOptionPane.showMessageDialog(this,"Your new password cannot have spaces,"
             + "\nor be blank.", "Change Password",JOptionPane.WARNING_MESSAGE);
        return false;
       }
        return true;
    }
    /**
     * Clears the fields when this button is pressed.
     * @param evt The clear button is pressed.
     */
    private void clearButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearButtonActionPerformed
        oldPasswordField.setText("");
        newPasswordField.setText("");
        retypePasswordField.setText("");
    }//GEN-LAST:event_clearButtonActionPerformed

    /** 
     * Closes the window when the cancel button is pressed.
     * @param evt Cancel button pressed.
     */
    private void closeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_closeButtonActionPerformed
        if(askForSave()) {
            if(service.leaveWithoutSaving(this)) {
                dispose();
            }
        } else {
            dispose();
        }
    }//GEN-LAST:event_closeButtonActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton clearButton;
    private javax.swing.JButton closeButton;
    private javax.swing.JLabel newLabel;
    private javax.swing.JPasswordField newPasswordField;
    private javax.swing.JLabel oldLabel;
    private javax.swing.JPasswordField oldPasswordField;
    private javax.swing.JLabel retypeLabel;
    private javax.swing.JPasswordField retypePasswordField;
    private javax.swing.JButton submitButton;
    private javax.swing.JLabel titleLabel;
    private javax.swing.JLabel usernameLabel;
    private javax.swing.JTextField usernameText;
    // End of variables declaration//GEN-END:variables
}
