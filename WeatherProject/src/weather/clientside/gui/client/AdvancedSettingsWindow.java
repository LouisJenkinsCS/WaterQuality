package weather.clientside.gui.client;

import java.awt.Dimension;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import weather.ApplicationControlSystem;
import weather.common.gui.component.BUDialog;
import weather.common.dbms.mysql.MySQLPropertiesSingleton;
import weather.common.utilities.PropertyManager;

/**
 * Displays the advanced settings that are not the local defaults or in the
 * database.
 *
 * @author Colton Daily (2014)
 * @version Spring 2014
 */
public class AdvancedSettingsWindow extends BUDialog {

    /**
     * Creates new form AdvancedSettingsWindow
     *
     * @param clientControl
     */
    public AdvancedSettingsWindow(ApplicationControlSystem clientControl) {
        super(clientControl);

        initComponents();

        retrieveSettings();
        
        int width = 448 + this.getInsets().left + this.getInsets().right;
        int height = 323 + this.getInsets().top + this.getInsets().bottom;
        Dimension thisDim = new Dimension(width, height);
        this.setSize(thisDim);
        this.setPreferredSize(thisDim);
        this.setMaximumSize(thisDim);
        this.setMinimumSize(thisDim);
        pack();
        
        super.postInitialize(true);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        warningLabel = new javax.swing.JLabel();
        storageHostnameLabel = new javax.swing.JLabel();
        storageHostTextField = new javax.swing.JTextField();
        storagePortLabel = new javax.swing.JLabel();
        storagePortTextField = new javax.swing.JTextField();
        retrievalHostnameLabel = new javax.swing.JLabel();
        retrievalHostTextField = new javax.swing.JTextField();
        retrievalPortLabel = new javax.swing.JLabel();
        retrievalPortTextField = new javax.swing.JTextField();
        movieHostLabel = new javax.swing.JLabel();
        movieHostTextField = new javax.swing.JTextField();
        moviePortLabel = new javax.swing.JLabel();
        moviePortTextField = new javax.swing.JTextField();
        weatherDatabaseLabel = new javax.swing.JLabel();
        weatherDatabaseUserNameLabel = new javax.swing.JLabel();
        weatherDatabaseTextField = new javax.swing.JTextField();
        weatherDatabaseUserNameTextField = new javax.swing.JTextField();
        weatherDatabasePasswordLabel = new javax.swing.JLabel();
        weatherDatabasePasswordField = new javax.swing.JPasswordField();
        buttonPanel = new javax.swing.JPanel();
        updateButton = new javax.swing.JButton();
        resetButton = new javax.swing.JButton();
        closeButton = new javax.swing.JButton();

        setTitle("Advanced Settings");
        setResizable(false);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        warningLabel.setText("Warning: Changing these settings could cause your application to not run.");
        getContentPane().add(warningLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(13, 13, 422, 16));

        storageHostnameLabel.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        storageHostnameLabel.setText("Storage Hostname/IP");
        getContentPane().add(storageHostnameLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(13, 47, 130, 16));
        getContentPane().add(storageHostTextField, new org.netbeans.lib.awtextra.AbsoluteConstraints(155, 47, 280, 22));

        storagePortLabel.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        storagePortLabel.setText("Port");
        getContentPane().add(storagePortLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(13, 79, 130, 16));
        getContentPane().add(storagePortTextField, new org.netbeans.lib.awtextra.AbsoluteConstraints(155, 76, 45, -1));

        retrievalHostnameLabel.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        retrievalHostnameLabel.setText("Retrieval Hostname/IP");
        getContentPane().add(retrievalHostnameLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(13, 112, 130, 16));
        getContentPane().add(retrievalHostTextField, new org.netbeans.lib.awtextra.AbsoluteConstraints(155, 106, 280, 22));

        retrievalPortLabel.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        retrievalPortLabel.setText("Port");
        getContentPane().add(retrievalPortLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(13, 138, 130, 16));
        getContentPane().add(retrievalPortTextField, new org.netbeans.lib.awtextra.AbsoluteConstraints(155, 135, 45, -1));

        movieHostLabel.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        movieHostLabel.setText("Movie Hostname/IP");
        getContentPane().add(movieHostLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(13, 167, 130, 16));
        getContentPane().add(movieHostTextField, new org.netbeans.lib.awtextra.AbsoluteConstraints(155, 164, 280, 22));

        moviePortLabel.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        moviePortLabel.setText("Port");
        getContentPane().add(moviePortLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(13, 193, 130, 16));
        getContentPane().add(moviePortTextField, new org.netbeans.lib.awtextra.AbsoluteConstraints(155, 193, 45, -1));

        weatherDatabaseLabel.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        weatherDatabaseLabel.setText("Database Hostname/IP");
        getContentPane().add(weatherDatabaseLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(13, 225, 130, 16));

        weatherDatabaseUserNameLabel.setText("User Name");
        getContentPane().add(weatherDatabaseUserNameLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(13, 254, 63, 16));
        getContentPane().add(weatherDatabaseTextField, new org.netbeans.lib.awtextra.AbsoluteConstraints(155, 222, 280, 22));
        getContentPane().add(weatherDatabaseUserNameTextField, new org.netbeans.lib.awtextra.AbsoluteConstraints(88, 251, 102, 22));

        weatherDatabasePasswordLabel.setText("Password");
        weatherDatabasePasswordLabel.setToolTipText("");
        weatherDatabasePasswordLabel.setName(""); // NOI18N
        getContentPane().add(weatherDatabasePasswordLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 254, 55, 16));

        weatherDatabasePasswordField.setToolTipText("");
        getContentPane().add(weatherDatabasePasswordField, new org.netbeans.lib.awtextra.AbsoluteConstraints(277, 251, 102, 22));

        java.awt.FlowLayout flowLayout1 = new java.awt.FlowLayout(java.awt.FlowLayout.CENTER, 50, 0);
        flowLayout1.setAlignOnBaseline(true);
        buttonPanel.setLayout(flowLayout1);

        updateButton.setText("Update");
        updateButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateButtonActionPerformed(evt);
            }
        });
        buttonPanel.add(updateButton);

        resetButton.setText("Reset");
        resetButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                resetButtonActionPerformed(evt);
            }
        });
        buttonPanel.add(resetButton);

        closeButton.setText("Close");
        closeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                closeButtonActionPerformed(evt);
            }
        });
        buttonPanel.add(closeButton);

        getContentPane().add(buttonPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(13, 285, 422, 25));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void resetButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_resetButtonActionPerformed
        //This is only hardcoded temporarlily until it is working full from the
        //database
        int dialogResult = JOptionPane.showConfirmDialog(this, 
                "Are you sure you want to reset these settings?", 
                "Confirm", JOptionPane.YES_NO_OPTION);

        if (dialogResult == JOptionPane.YES_OPTION) {
            retrieveSettings();
        }

    }//GEN-LAST:event_resetButtonActionPerformed

    /**
     * Grabs the settings from GeneralWeather property file and updates the text
     * fields with the value.
     */
    private void retrieveSettings() {
        //server hostname and port properties
        storageHostTextField.setText(PropertyManager.getGeneralProperty("storageHost"));
        storagePortTextField.setText(PropertyManager.getGeneralProperty("storagePort"));
        retrievalHostTextField.setText(PropertyManager.getGeneralProperty("retrievalHost"));
        retrievalPortTextField.setText(PropertyManager.getGeneralProperty("retrievalPort"));
        movieHostTextField.setText(PropertyManager.getGeneralProperty("movieHost"));
        moviePortTextField.setText(PropertyManager.getGeneralProperty("moviePort"));
        weatherDatabaseTextField.setText(MySQLPropertiesSingleton.getInstance().getLocalDatabaseServer());
        weatherDatabaseUserNameTextField.setText(MySQLPropertiesSingleton.getInstance().getDatabaseUsername());
        weatherDatabasePasswordField.setText(MySQLPropertiesSingleton.getInstance().getDatabasePassword());
    }

    private void closeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_closeButtonActionPerformed
        dispose();
    }//GEN-LAST:event_closeButtonActionPerformed

    /**
     * Saves the properties to the property file.
     *
     * @param evt
     */
    private void updateButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateButtonActionPerformed
        int dialogResult = JOptionPane.showConfirmDialog(this, 
                "Are you sure you want to update these settings?", 
                "Confirm", JOptionPane.YES_NO_OPTION);

        if (dialogResult == JOptionPane.YES_OPTION) {
            if(saveProperties())
            {
                JOptionPane.showMessageDialog(this, 
                        "Your settings have been changed!", 
                        "Update", JOptionPane.INFORMATION_MESSAGE);
            }
        }        
    }//GEN-LAST:event_updateButtonActionPerformed

    /**
     * This saves all the property values to the GeneralWeather properties file.
     * TODO: Add some error handling with the fields.
     */
    private boolean saveProperties() {
        String password = new String(weatherDatabasePasswordField.getPassword());
        if(!checkDBConnection(weatherDatabaseTextField.getText(), weatherDatabaseUserNameTextField.getText(), password))
        {
            JOptionPane.showMessageDialog(this, "Unable to connect to the "
                    + "database with that URL and credentials. Please verify "
                    + "they are correct and try again."
                    , "Database Connection Error", JOptionPane.ERROR_MESSAGE);
            return false;
        }
        MySQLPropertiesSingleton.getInstance().setDatabaseURL(weatherDatabaseTextField.getText());
        MySQLPropertiesSingleton.getInstance().setDatabaseUserName(weatherDatabaseUserNameTextField.getText());
        MySQLPropertiesSingleton.getInstance().setDatabasePassword(password);
        MySQLPropertiesSingleton.getInstance().saveProperties();
        
        //server hostname and port properties
        PropertyManager.setGeneralProperty("storageHost", storageHostTextField.getText());
        PropertyManager.setGeneralProperty("storagePort", storagePortTextField.getText());
        PropertyManager.setGeneralProperty("retrievalHost", retrievalHostTextField.getText());
        PropertyManager.setGeneralProperty("retrievalPort", retrievalPortTextField.getText());
        PropertyManager.setGeneralProperty("movieHost", movieHostTextField.getText());
        PropertyManager.setGeneralProperty("moviePort", moviePortTextField.getText());
        return true;
    }
    
    private boolean checkDBConnection(String url, String userName, String password)
    {
        Connection conn = null;
        try {
            conn = DriverManager.getConnection(url, userName, password);

            if(!conn.isClosed()){
                conn.close();
                return true;
            }
        }   catch (SQLException ex) {
            Logger.getLogger(AdvancedSettingsWindow.class.getName()).log(Level.SEVERE, null, ex);
        }
        return false;
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel buttonPanel;
    private javax.swing.JButton closeButton;
    private javax.swing.JLabel movieHostLabel;
    private javax.swing.JTextField movieHostTextField;
    private javax.swing.JLabel moviePortLabel;
    private javax.swing.JTextField moviePortTextField;
    private javax.swing.JButton resetButton;
    private javax.swing.JTextField retrievalHostTextField;
    private javax.swing.JLabel retrievalHostnameLabel;
    private javax.swing.JLabel retrievalPortLabel;
    private javax.swing.JTextField retrievalPortTextField;
    private javax.swing.JTextField storageHostTextField;
    private javax.swing.JLabel storageHostnameLabel;
    private javax.swing.JLabel storagePortLabel;
    private javax.swing.JTextField storagePortTextField;
    private javax.swing.JButton updateButton;
    private javax.swing.JLabel warningLabel;
    private javax.swing.JLabel weatherDatabaseLabel;
    private javax.swing.JPasswordField weatherDatabasePasswordField;
    private javax.swing.JLabel weatherDatabasePasswordLabel;
    private javax.swing.JTextField weatherDatabaseTextField;
    private javax.swing.JLabel weatherDatabaseUserNameLabel;
    private javax.swing.JTextField weatherDatabaseUserNameTextField;
    // End of variables declaration//GEN-END:variables
}
