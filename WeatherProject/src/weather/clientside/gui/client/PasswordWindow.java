package weather.clientside.gui.client;

import java.awt.Dimension;
import javax.swing.JOptionPane;
import weather.GeneralService;
import weather.common.data.User;
import weather.common.dbms.DBMSSystemManager;
import weather.common.dbms.DBMSUserManager;
import weather.common.gui.component.BUDialog;
import weather.common.utilities.PasswordEmailer;

/**
 * This class represents a password retrieval window.
 * The user can either enter their username or email address.
 * By entering a username, the user's password will be emailed to the e-mail address
 * stored in the database. By entering the email address that is stored in the database,
 * the user will be e-mailed their password.
 *
 * @author Software Engineering
 * @author Joshua Gentile (2009)
 * @author Andrew Bennett (2010)
 * @version Spring 2010
 */
public class PasswordWindow extends BUDialog {
    //private String emails;
    private DBMSSystemManager dbms;
    private static GeneralService clientService;
    private String topMessage = "<html>" +
            "If you are a registered user, please enter your email address or username " +
            "below to reset your password.  A new password will be sent to the email address " +
            "on file." +
            "<br/><br/>" +
            "After you log in to the Weather Viewer, you may change your password by clicking " +
            "the <i>File</i> dropdown menu, then <i>Settings</i>, and <i>Change Password</i>. " +
            "</html>";
    private String bottomMessage = "<html>" +
            "If you are not a registered user, please close this " +
            "window and click the \"Login as Guest\" button " +
            "to start the program.  Please contact your system " +
            "administrator for information on setting up a " +
            "weather viewer account.</html>";

    /** 
     * Creates a new EmailPassword Window.
     * 
     * @param clientService The GeneralService the login has.
     */
    public PasswordWindow(GeneralService clientService) {
        super();
        initComponents();
        getRootPane().setDefaultButton(emailButton);
        PasswordWindow.clientService = clientService;
        userField.requestFocus();
        weather.clientside.utilities.RightClickMenu.addMenuTo(userField);
        this.registeredUserJLabel.setText(topMessage);
        this.guestJLabel.setText(bottomMessage);
        int width = 334 + this.getInsets().left + this.getInsets().right;
        int height = 364 + this.getInsets().top + this.getInsets().bottom;
        Dimension thisDim = new Dimension(width, height);
        this.setSize(thisDim);
        this.setPreferredSize(thisDim);
        this.setMaximumSize(thisDim);
        this.setMinimumSize(thisDim);
        pack();
        super.postInitialize(false);
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        emailButton = new javax.swing.JButton();
        userField = new javax.swing.JTextField();
        cancelButton = new javax.swing.JButton();
        registeredUserJLabel = new javax.swing.JLabel();
        guestJLabel = new javax.swing.JLabel();
        usersLabel = new javax.swing.JLabel();
        emailRadioButton = new javax.swing.JRadioButton();
        userNameRadioButton = new javax.swing.JRadioButton();

        setTitle("Weather Viewer - Password Reset");
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        emailButton.setText("Email New Password");
        emailButton.setToolTipText("Sends you a email with login info if your email or username is correct");
        emailButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                emailButtonActionPerformed(evt);
            }
        });
        getContentPane().add(emailButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(53, 220, 151, 25));

        userField.setToolTipText("Type either email address or user name by what was selected from the drop down menu.");
        getContentPane().add(userField, new org.netbeans.lib.awtextra.AbsoluteConstraints(53, 190, 228, -1));

        cancelButton.setText("Cancel");
        cancelButton.setToolTipText("Close this window and login into the BU Weather Project as a guest");
        cancelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelButtonActionPerformed(evt);
            }
        });
        getContentPane().add(cancelButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 220, 71, 25));

        registeredUserJLabel.setFont(new java.awt.Font("Tahoma", 0, 11)); // NOI18N
        getContentPane().add(registeredUserJLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(12, 30, 310, 100));

        guestJLabel.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        getContentPane().add(guestJLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(12, 252, 310, 100));

        usersLabel.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        usersLabel.setText("Registered Users:");
        getContentPane().add(usersLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(114, 12, 106, 15));

        buttonGroup1.add(emailRadioButton);
        emailRadioButton.setSelected(true);
        emailRadioButton.setText("Email Address");
        emailRadioButton.setToolTipText("s.t. abc@huskies.bloomu.edu");
        getContentPane().add(emailRadioButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 133, -1, -1));

        buttonGroup1.add(userNameRadioButton);
        userNameRadioButton.setText("User Name");
        userNameRadioButton.setToolTipText("s.t. abc");
        getContentPane().add(userNameRadioButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 158, -1, -1));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * Closes the window and goes back to the login window.
     * @param evt The window x button has been clicked.
     */
    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        dispose();
    }//GEN-LAST:event_formWindowClosing

    /**
     * Cancels the email password window and goes back to the login window.
     * @param evt The cancel button was clicked.
     */
    private void cancelButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelButtonActionPerformed
        dispose();
    }//GEN-LAST:event_cancelButtonActionPerformed

    /**
     * This method is called when the email button is pressed. It will check
     * to see if a username or email address is entered, and it will return
     * that it is wrong if it is not correct.
     *@param evt The button was pressed.
     */
    private void emailButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_emailButtonActionPerformed
        if (this.checkInformation()) {
            this.sendPassword();
            dispose();
        }
    }//GEN-LAST:event_emailButtonActionPerformed

    /**
     * Sends the user their password. The user must use this on campus, if not
     * the password is not sent to the user, but will change in the database.
     */
    private void sendPassword()
    {
        dbms = clientService.getDBMSSystem();
        DBMSUserManager userMgr = dbms.getUserManager();
        String chooserText = userField.getText(); //Could be user name or email address
        User user = null;
        if (emailRadioButton.isSelected()) {
            user = userMgr.obtainUserEmail(chooserText);
        }
        if (userNameRadioButton.isSelected()) {
            user = userMgr.obtainUser(chooserText);
        }
        //The new password is a random string with 8 characters. The user can login with this new password
        String newPassword = Integer.toHexString(new java.util.Random().nextInt());

        // Attempts to send email; exits method if unsuccessful.
        if(PasswordEmailer.sendPassword(newPassword, user, this)){
            JOptionPane.showMessageDialog(this, 
                    "Your new login info has been emailed to you.");
            userMgr.updatePassword(user.getLoginId(), newPassword);
        }
    }

    /**
     * Checks the information passed to the password fields.
     * @return True if the information entered is correct and in the database
     * false, if not.
     */
    private boolean checkInformation()
    {
        dbms = clientService.getDBMSSystem();
        DBMSUserManager userMgr = dbms.getUserManager();
        String chooserText = userField.getText(); //Could be user name or email address
        User user = null;
        if (emailRadioButton.isSelected()) {
            user = userMgr.obtainUserEmail(chooserText);
        }
        if (userNameRadioButton.isSelected()) {
            user = userMgr.obtainUser(chooserText);
        } 
        if (user == null) {
            JOptionPane.showMessageDialog(this, "Invalid information. Please try again.");
            return false;
        }
        return true;
        
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JButton cancelButton;
    private javax.swing.JButton emailButton;
    private javax.swing.JRadioButton emailRadioButton;
    private javax.swing.JLabel guestJLabel;
    private javax.swing.JLabel registeredUserJLabel;
    private javax.swing.JTextField userField;
    private javax.swing.JRadioButton userNameRadioButton;
    private javax.swing.JLabel usersLabel;
    // End of variables declaration//GEN-END:variables

}
